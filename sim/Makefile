##Makefile for UVM Testbench
RTL= ../rtl/*
work= work #library name
SVTB1= ../tb/spi_top.sv
INC = +incdir+../tb +incdir+../test +incdir+../master_agent +incdir+../slave_agent
SVTB2 = ../test/spi_pkg.sv
VSIMOPT= -vopt -voptargs=+acc 
VSIMCOV= -coverage -sva 
VSIMBATCH1= -c -do  " log -r /* ;coverage save -onexit mem_cov1;run -all; exit"
VSIMBATCH2= -c -do  " log -r /* ;coverage save -onexit mem_cov2;run -all; exit"
VSIMBATCH3= -c -do  " log -r /* ;coverage save -onexit mem_cov3;run -all; exit"
VSIMBATCH4= -c -do  " log -r /* ;coverage save -onexit mem_cov4;run -all; exit"
VSIMBATCH5= -c -do  " log -r /* ;coverage save -onexit mem_cov4;run -all; exit"

help:
	@echo =============================================================================================================
	@echo "! USAGE   		--  make target                             																			!"
	@echo "! clean   		=>  clean the earlier log and intermediate files.       													!"
	@echo "! sv_cmp    	=>  Create library and compile the code.                   												!"
	@echo "! run_sim    =>  run the simulation in batch mode.                   													!"
	@echo "! run_test	=>  clean, compile & run the simulation for ram_signle_adddr_test in batch mode.	!" 
	@echo "! run_test1	=>  clean, compile & run the simulation for ram_ten_adddr_test in batch mode.			!" 
	@echo "! run_test2	=>  clean, compile & run the simulation for ram_odd_adddr_test in batch mode.			!"
	@echo "! run_test3	=>  clean, compile & run the simulation for ram_even_adddr_test in batch mode.		!" 
	@echo "! view_wave1 =>  To view the waveform of small_packet_test	    														!" 
	@echo "! view_wave2 =>  To view the waveform of medium packet test															!" 
	@echo "! view_wave3 =>  To view the waveform of big packet test	  	  															!" 
	@echo "! view_wave4 =>  To view the waveform of error packet test	    															!" 
	@echo ====================================================================================================================

sv_cmp:
	vlib $(work)
	vmap work $(work)
	vlog -work $(work) $(RTL) $(INC) $(SVTB2) $(SVTB1) 	
	
run_test:sv_cmp
	vsim $(VSIMOPT) $(VSIMCOV) $(VSIMBATCH1)  -wlf wave_file1.wlf -l test1.log  -sv_seed random  work.spi_top1 +UVM_TESTNAME=spi_test1
	vcover report  -cvg  -details -nocompactcrossbins -codeAll -assert -directive -html mem_cov1

run_test1:sv_cmp
	vsim $(VSIMOPT) $(VSIMCOV) $(VSIMBATCH2)  -wlf wave_file2.wlf -l test2.log  -sv_seed random  work.spi_top1  +UVM_TESTNAME=spi_test2
		vcover report  -cvg  -details -nocompactcrossbins -codeAll -assert -directive -html mem_cov2

run_test2:sv_cmp
	vsim $(VSIMOPT) $(VSIMCOV) $(VSIMBATCH3)  -wlf wave_file3.wlf -l test3.log  -sv_seed random  work.spi_top1  +UVM_TESTNAME=spi_test3
	vcover report  -cvg  -details -nocompactcrossbins -codeAll -assert -directive -html mem_cov3

run_test3:sv_cmp
	vsim $(VSIMOPT) $(VSIMCOV) $(VSIMBATCH4)  -wlf wave_file4.wlf -l test4.log  -sv_seed random  work.spi_top1 +UVM_TESTNAME=spi_test4
	vcover report  -cvg  -details -nocompactcrossbins -codeAll -assert -directive -html mem_cov4

run_test4:sv_cmp
	vsim $(VSIMOPT) $(VSIMCOV) $(VSIMBATCH5)  -wlf wave_file5.wlf -l test4.log  -sv_seed random  work.router_top_tb +UVM_TESTNAME=softreset_packet_test
	vcover report  -cvg  -details -nocompactcrossbins -codeAll -assert -directive -html mem_cov5

view_wave1:
	vsim -view wave_file1.wlf
	
view_wave2:
	vsim -view wave_file2.wlf
	
view_wave3:
	vsim -view wave_file3.wlf
	
view_wave4:
	vsim -view wave_file4.wlf

view_wave5:
	vsim -view wave_file5.wlf


report:
	vcover merge mem_cov mem_cov1 mem_cov2 mem_cov3 mem_cov4
	vcover report -cvg -details -nocompactcrossbins -codeAll -assert -directive -html mem_cov

regress: clean run_test run_test1 run_test2 run_test3 report cov

cov:
	firefox covhtmlreport/index.html&
	

clean:
	rm -rf transcript* *log*  vsim.wlf fcover* covhtml* mem_cov* *.wlf modelsim.ini
	clear
